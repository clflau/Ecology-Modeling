params <- c(r=0.2, alph=0.000000, e=0.01, a=0.001, d=0.01) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
params <- c(r=0.2, alph=0.000000, e=0.01, a=0.001, d=0.00001) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, alph=0.000000, e=0.01, a=0.001, d=0.0000) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
head(LV.out); tail(LV.out)
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
params <- c(r=0.2, alph=0.000000, e=0.01, a=0.001, d=0.003) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, alph=0.000000, e=0.01, a=0.0001, d=0.003) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, alph=0.0000002, e=0.01, a=0.001, d=0.003) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, alph=0.00002, e=0.01, a=0.001, d=0.003) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, alph=0.005, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
params <- c(r=0.2, alph=0.0049, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, alph=0.0051, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
params <- c(r=0.2, alph=0.0049, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
params <- c(r=0.2, alph=0.00002, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.001, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.001, a=0.001, d=0.02) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.001, a=0.001, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.0001, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.0001, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, alph=0.00002, e=0.0001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.002, e=0.0001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
params <- c(r=0.2, alph=0.0002, e=0.0001, a=0.0001, d=0.02) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.0001, a=0.0001, d=0.02) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, alph=0.00002, e=0.0001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.0001, a=0.001, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, alph=0.00002, e=0.1, a=0.001, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.00002, e=0.1, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
params <- c(r=0.2, alph=0.0002, e=0.1, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
params <- c(r=0.2, alph=0.0002, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_rsl_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = " "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a)); R_star
C_star <- with(as.list(params), (e*a*r-d*r*alph)/(e*a^2)); C_star
with(as.list(params), e*a/d > alph) # stable equilibrium if TRUE
?paste
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], ";alpha=", params[2], ";e=", params[3], ";a=", params[4], ";d=", params[5], sep = "  "))
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], " ;alpha=", params[2], " ;e=", params[3], " ;a=", params[4], " ;d=", params[5], sep = "  "))
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], "; alpha=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Prey self-limit", sub = paste("r=", params[1], "; alpha=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = " "))
LV_T2_func <- function(tt, init, params){
R <- init[1]
C <- init[2]
with(as.list(params),{
dR.dt <- r*R-(a*R*C/(1+a*h*R))
dC.dt <- (e*a*R*C/(1+a*h*R))-d*C
return(list(c(dR.dt, dC.dt)))
})
}
init <- c(R=100, C=100)
tseq <- seq(0, 2000, by=10)
params <- c(r=0.2, h=0.05, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.005, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, h=0.0005, e=0.01, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.0005, e=0.001, a=0.001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.0005, e=0.001, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.0005, e=0.001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
params <- c(r=0.2, h=0.00005, e=0.001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=1, e=0.001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, h=.8, e=0.001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=.1, e=0.001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.01, e=0.001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.001, e=0.001, a=0.0001, d=0.002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=0.2, h=0.001, e=0.001, a=0.0001, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
params <- c(r=0.2, h=0.0001, e=0.001, a=0.0001, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
params <- c(r=0.2, h=0.0001, e=0.001, a=0.001, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.0001, e=0.001, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.00001, e=0.001, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=0.2, h=0.000001, e=0.001, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
params <- c(r=0.2, h=0.000001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
params <- c(r=0.2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
tseq <- seq(0, 200, by=10)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
init <- c(R=100, C=10)
tseq <- seq(0, 200, by=10)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
init <- c(R=1000, C=10)
tseq <- seq(0, 200, by=10)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
init <- c(R=10000, C=10)
tseq <- seq(0, 200, by=10)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
init <- c(R=100000, C=10)
tseq <- seq(0, 200, by=10)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
init <- c(R=10, C=10)
tseq <- seq(0, 200, by=10)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
init <- c(R=10, C=100)
tseq <- seq(0, 200, by=10)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=20, h=0.001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=2, h=0.00001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
init <- c(R=100, C=100)
tseq <- seq(0, 200, by=10)
params <- c(r=2, h=0.00001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
legend("topright", c("Resource", "Consumer"), col = c("blue", "red"), lty = 1)
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
?abline
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star)
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
params <- c(r=2, h=0.00001, e=0.0005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
params <- c(r=2, h=0.00001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star)
tseq <- seq(0, 10, by=0.1)
params <- c(r=2, h=0.00001, e=0.005, a=0.01, d=0.0002) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star)
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=2, h=0.0001, e=0.005, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
params <- c(r=20, h=0.0001, e=0.005, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
params <- c(r=200, h=0.0001, e=0.005, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
params <- c(r=2000, h=0.0001, e=0.005, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star)
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=200, h=0.0001, e=0.005, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
init <- c(R=10, C=100)
tseq <- seq(0, 10, by=0.1)
params <- c(r=200, h=0.0001, e=0.005, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
params <- c(r=2, h=0.0001, e=0.005, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star)
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
params <- c(r=2, h=0.0001, e=0.005, a=0.01, d=0.002) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
params <- c(r=2, h=0.00001, e=0.005, a=0.01, d=0.2) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
params <- c(r=2, h=0.0001, e=0.005, a=0.01, d=0.2) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.2) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
init <- c(R=10, C=10)
tseq <- seq(0, 10, by=0.1)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.2) #play around with parameters to get spirals and limit cycles
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star)
?abline
abline(v = R_star, h = C_star, lty = 2)
abline(v = R_star, h = C_star, lty = 3)
abline(v = R_star, h = C_star, lty = 5)
abline(v = R_star, h = C_star, col = 2)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star, col = 2)
tseq <- seq(0, 10)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.0)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star, col = 2)
params <- c(r=2, h=0.001, e=0.005, a=0.01, d=0.01)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star, col = 2)
params <- c(r=200, h=0.001, e=0.005, a=0.01, d=0.01)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
params <- c(r=20, h=0.001, e=0.005, a=0.01, d=0.01)
#internal equilibrium
R_star <- with(as.list(params), d/(e*a-a*h*d)); R_star
C_star <- with(as.list(params), (r*h*d/(a*e-a*h*d))+1); C_star
with(as.list(params), e > h*d) # stable equilibrium if TRUE
LV.out <- lsoda(init, tseq, LV_T2_func, params)
head(LV.out); tail(LV.out)
plot(LV.out[,2], LV.out[,3], type = "l", xlab = "R", ylab = "C", main = "Pred-Prey with Pred TypeII Functional Response", sub = paste("r=", params[1], "; h=", params[2], "; e=", params[3], "; a=", params[4], "; d=", params[5], sep = "  "))
abline(v = R_star, h = C_star, col = 2)
plot(LV.out[,1], LV.out[,2], type = "l", col = "blue", xlab = "time", ylab = "pop size")
lines(LV.out[,1], LV.out[,3], col = "red", xlab = "time")
